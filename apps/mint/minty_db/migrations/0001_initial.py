# Generated by Django 5.2.7 on 2025-10-15 03:00

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "slot",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("equip", "Equipment"),
                            ("use", "Consumable"),
                            ("setup", "Setup"),
                            ("etc", "Etc"),
                            ("cash", "Cash"),
                        ],
                        default="",
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("weapon", "Weapon"),
                            ("armor", "Armor"),
                            ("accessory", "Accessory"),
                            ("consumable", "Consumable"),
                            ("ammo", "Ammo"),
                            ("scroll", "Scroll"),
                            ("quest", "Quest Item"),
                            ("misc", "Miscellaneous"),
                        ],
                        default="",
                        max_length=20,
                    ),
                ),
                (
                    "subcategory",
                    models.CharField(blank=True, default="", max_length=50),
                ),
                ("attributes", models.JSONField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Map",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Mob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
                ("hp", models.IntegerField()),
                ("mp", models.IntegerField()),
                ("exp", models.IntegerField()),
                ("mesos", models.IntegerField()),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NPC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Continent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="minty_db_co_name_ab3a01_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="CraftingRecipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("result_quantity", models.IntegerField(default=1)),
                ("meso_cost", models.IntegerField(blank=True, null=True)),
                (
                    "result_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crafted_by_recipes",
                        to="minty_db.item",
                    ),
                ),
                (
                    "crafter_npc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="crafting_recipes",
                        to="minty_db.npc",
                    ),
                ),
            ],
            options={
                "ordering": ["result_item__name"],
            },
        ),
        migrations.CreateModel(
            name="MapleClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="minty_db_ma_name_5367a0_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "maple_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="minty_db.mapleclass",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ItemDrop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "drop_rate",
                    models.FloatField(help_text="Drop rate as a decimal (0.0 to 1.0)"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.item"
                    ),
                ),
                (
                    "mob",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.mob"
                    ),
                ),
            ],
            options={
                "ordering": ["-drop_rate"],
            },
        ),
        migrations.AddField(
            model_name="item",
            name="dropped_by",
            field=models.ManyToManyField(
                related_name="item_drops",
                through="minty_db.ItemDrop",
                to="minty_db.mob",
            ),
        ),
        migrations.CreateModel(
            name="MobSpawn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "map",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.map"
                    ),
                ),
                (
                    "mob",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.mob"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="mob",
            name="spawns_in",
            field=models.ManyToManyField(
                related_name="mob_spawns",
                through="minty_db.MobSpawn",
                to="minty_db.map",
            ),
        ),
        migrations.CreateModel(
            name="NPCLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "map",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.map"
                    ),
                ),
                (
                    "npc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.npc"
                    ),
                ),
            ],
            options={
                "db_table": "game_npc_location",
            },
        ),
        migrations.AddField(
            model_name="npc",
            name="appears_in",
            field=models.ManyToManyField(
                related_name="npc_locations",
                through="minty_db.NPCLocation",
                to="minty_db.map",
            ),
        ),
        migrations.CreateModel(
            name="NPCShopItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("price", models.IntegerField(help_text="Price in mesos")),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.item"
                    ),
                ),
                (
                    "npc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.npc"
                    ),
                ),
            ],
            options={
                "db_table": "game_npc_shop_item",
                "ordering": ["price"],
            },
        ),
        migrations.AddField(
            model_name="npc",
            name="sells",
            field=models.ManyToManyField(
                related_name="sold_by_npcs",
                through="minty_db.NPCShopItem",
                to="minty_db.item",
            ),
        ),
        migrations.CreateModel(
            name="Quest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "quest_line",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                ("meso_reward", models.IntegerField(blank=True, null=True)),
                ("exp_reward", models.IntegerField(blank=True, null=True)),
                ("required_level", models.IntegerField(blank=True, null=True)),
                ("misc_requirements", models.JSONField(blank=True, null=True)),
                (
                    "prerequisite_quest",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="unlocks_quests",
                        to="minty_db.quest",
                    ),
                ),
                (
                    "required_class",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="class_quests",
                        to="minty_db.mapleclass",
                    ),
                ),
                (
                    "required_job",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="job_quests",
                        to="minty_db.job",
                    ),
                ),
                (
                    "started_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quests",
                        to="minty_db.npc",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="QuestReward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("quantity", models.IntegerField(default=1)),
                ("reward_group", models.IntegerField(default=0)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.item"
                    ),
                ),
                (
                    "quest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.quest"
                    ),
                ),
            ],
            options={
                "db_table": "game_quest_reward",
                "ordering": ["reward_group", "item__name"],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "continent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regions",
                        to="minty_db.continent",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="map",
            name="region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="maps",
                to="minty_db.region",
            ),
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "source_id",
                    models.IntegerField(
                        blank=True, db_index=True, default=None, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skills",
                        to="minty_db.job",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CraftingIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="minty_db.craftingrecipe",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="minty_db.item"
                    ),
                ),
            ],
            options={
                "db_table": "game_crafting_ingredient",
                "ordering": ["item__name"],
                "unique_together": {("recipe", "item")},
            },
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(fields=["name"], name="minty_db_jo_name_c2d837_idx"),
        ),
        migrations.AddIndex(
            model_name="itemdrop",
            index=models.Index(
                fields=["drop_rate"], name="minty_db_it_drop_ra_da1cd7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="itemdrop",
            unique_together={("item", "mob")},
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["name"], name="minty_db_it_name_4f260c_idx"),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(
                fields=["slot", "category"], name="minty_db_it_slot_129f4a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mobspawn",
            unique_together={("mob", "map")},
        ),
        migrations.AddIndex(
            model_name="mob",
            index=models.Index(fields=["name"], name="minty_db_mo_name_c433b0_idx"),
        ),
        migrations.AddIndex(
            model_name="mob",
            index=models.Index(fields=["hp"], name="minty_db_mo_hp_8a88a4_idx"),
        ),
        migrations.AddIndex(
            model_name="mob",
            index=models.Index(fields=["exp"], name="minty_db_mo_exp_33020c_idx"),
        ),
        migrations.AddIndex(
            model_name="craftingrecipe",
            index=models.Index(
                fields=["result_item", "crafter_npc"],
                name="minty_db_cr_result__bd9813_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="craftingrecipe",
            index=models.Index(
                fields=["meso_cost"], name="minty_db_cr_meso_co_b476ac_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="npclocation",
            unique_together={("npc", "map")},
        ),
        migrations.AddIndex(
            model_name="npcshopitem",
            index=models.Index(fields=["price"], name="game_npc_sh_price_261119_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="npcshopitem",
            unique_together={("npc", "item")},
        ),
        migrations.AddIndex(
            model_name="npc",
            index=models.Index(fields=["name"], name="minty_db_np_name_32b2f3_idx"),
        ),
        migrations.AddIndex(
            model_name="quest",
            index=models.Index(fields=["name"], name="minty_db_qu_name_215f00_idx"),
        ),
        migrations.AddIndex(
            model_name="quest",
            index=models.Index(
                fields=["quest_line"], name="minty_db_qu_quest_l_736758_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="quest",
            index=models.Index(
                fields=["required_level"], name="minty_db_qu_require_5e693f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="questreward",
            unique_together={("quest", "item")},
        ),
        migrations.AddIndex(
            model_name="region",
            index=models.Index(fields=["name"], name="minty_db_re_name_32bfd9_idx"),
        ),
        migrations.AddIndex(
            model_name="map",
            index=models.Index(fields=["name"], name="minty_db_ma_name_2917c5_idx"),
        ),
        migrations.AddIndex(
            model_name="skill",
            index=models.Index(fields=["name"], name="minty_db_sk_name_263e0d_idx"),
        ),
    ]
